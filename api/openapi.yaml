openapi: 3.0.1
info:
  contact:
    email: developer-access@brex.com
    name: Admin
    url: https://brex.com
  description: |2

    The budgets API lets you manage your Brex budgets.
  title: Budgets API
  version: "1.0"
  x-konfig-has-globally-required-security: true
servers:
- description: Production
  url: https://platform.brexapis.com
- description: "Staging (Note: This is not a sandbox. It will not work with customer\
    \ tokens.)"
  url: https://platform.staging.brexapps.com
security:
- OAuth2: []
tags:
- description: Endpoints for budgets data.
  name: Budgets
- description: Endpoints for budgets programs data.
  name: Budget Programs
paths:
  /v1/budget_programs:
    get:
      description: |2

        Lists Budget Programs belonging to this account
      operationId: BudgetPrograms_list
      parameters:
      - explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_BudgetProgram_'
          description: listBudgetPrograms 200 response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - OAuth2:
        - budgets.readonly
        - budgets
      summary: |2

        List Budget Programs
      tags:
      - Budget Programs
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-budget_programs
      x-accepts: application/json
    post:
      description: |2

        Creates a Budget Program.
        If your account does not have access to budget program features, a 403 response status will be returned.
        If this is the case and you want to gain access to this endpoint, please contact Brex support.
      operationId: BudgetPrograms_create
      parameters:
      - explode: false
        in: header
        name: Idempotency-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBudgetProgramRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetProgram'
          description: createBudgetProgram 200 response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - OAuth2:
        - budgets
      summary: |2

        Create Budget Program
      tags:
      - Budget Programs
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-budget_programs
      x-content-type: application/json
      x-accepts: application/json
  /v1/budget_programs/{id}:
    delete:
      description: "\nDelete a Budget Program by ID.\nThis endpoint requires budget\
        \ management. If your account does not have access to budget management features,\
        \ a 403 response status will be returned. \nIf this is the case and you want\
        \ to gain access to this endpoint, please contact Brex support.\n"
      operationId: BudgetPrograms_removeProgramById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetProgram'
          description: deleteBudgetProgram 200 response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - OAuth2:
        - budgets
      summary: |2

        Delete Budget Program
      tags:
      - Budget Programs
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-budget_programs-id
      x-accepts: application/json
    get:
      description: |2

        Retrieves a Budget Program by ID
      operationId: BudgetPrograms_getById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetProgram'
          description: getBudgetProgramById 200 response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - OAuth2:
        - budgets.readonly
        - budgets
      summary: |2

        Get Budget Program
      tags:
      - Budget Programs
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-budget_programs-id
      x-accepts: application/json
    put:
      description: "\nUpdates a Budget Program.\nThis endpoint requires budget management.\
        \ If your account does not have access to budget management features, a 403\
        \ response status will be returned. \nIf this is the case and you want to\
        \ gain access to this endpoint, please contact Brex support.\n"
      operationId: BudgetPrograms_updateProgramById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Idempotency-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBudgetProgramRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetProgram'
          description: updateBudgetProgram 200 response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - OAuth2:
        - budgets
      summary: |2

        Update Budget Program
      tags:
      - Budget Programs
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-budget_programs-id
      x-content-type: application/json
      x-accepts: application/json
  /v1/budgets:
    get:
      description: |2

        Lists Budgets belonging to this account
      operationId: Budgets_list
      parameters:
      - explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_Budget_'
          description: listBudgets 200 response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - OAuth2:
        - budgets.readonly
        - budgets
      summary: |2

        List Budgets
      tags:
      - Budgets
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-budgets
      x-accepts: application/json
    post:
      description: "\nCreates a Budget.\nThis endpoint requires budget management.\
        \ If your account does not have access to budget management features, a 403\
        \ response status will be returned. \nIf this is the case and you want to\
        \ gain access to this endpoint, please contact Brex support.\n"
      operationId: Budgets_create
      parameters:
      - explode: false
        in: header
        name: Idempotency-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBudgetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
          description: createBudget 200 response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - OAuth2:
        - budgets
      summary: |2

        Create Budget
      tags:
      - Budgets
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-budgets
      x-content-type: application/json
      x-accepts: application/json
  /v1/budgets/{id}:
    get:
      description: |2

        Retrieves a Budget by ID
      operationId: Budgets_getById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
          description: getBudgetById 200 response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - OAuth2:
        - budgets.readonly
        - budgets
      summary: |2

        Get Budget
      tags:
      - Budgets
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-budgets-id
      x-accepts: application/json
    put:
      description: "\nUpdates a Budget.\nThis endpoint requires budget management.\
        \ If your account does not have access to budget management features, a 403\
        \ response status will be returned. \nIf this is the case and you want to\
        \ gain access to this endpoint, please contact Brex support.\n"
      operationId: Budgets_updateBudget
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Idempotency-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBudgetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
          description: updateBudget 200 response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - OAuth2:
        - budgets
      summary: |2

        Update Budget
      tags:
      - Budgets
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-budgets-id
      x-content-type: application/json
      x-accepts: application/json
  /v1/budgets/{id}/archive:
    post:
      description: |2

        Archives a budget, making it unusable for future expenses and removing it from the UI
      operationId: Budgets_archiveBudgetById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: archiveBudget 200 response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - OAuth2:
        - budgets
      summary: |2

        Archive a budget
      tags:
      - Budgets
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-budgets-id-archive
      x-accepts: application/json
components:
  schemas:
    Budget:
      example:
        creator_user_id: creator_user_id
        end_date: 2000-01-23
        limit_type: ""
        budget_id: budget_id
        member_user_ids:
        - member_user_ids
        - member_user_ids
        description: description
        current_period_balance: null
        budget_status: null
        owner_user_ids:
        - owner_user_ids
        - owner_user_ids
        account_id: account_id
        spend_type: null
        parent_budget_id: parent_budget_id
        name: name
        limit: null
        period_type: null
        start_date: 2000-01-23
      properties:
        description:
          description: |2

            Description of what the Budget is used for.
          nullable: true
          type: string
        budget_id:
          description: |2

            Unique ID for the Budget.
          type: string
        account_id:
          description: |2

            The Brex account this Budget belongs to.
          type: string
        creator_user_id:
          description: |2

            The ID of the user who originally created this budget.
          nullable: true
          type: string
        name:
          description: |2

            Name for the Budget.
          type: string
        parent_budget_id:
          description: |2

            ID of parent Budget.
          nullable: true
          type: string
        owner_user_ids:
          description: |2

            User IDs of the owners of the Budget.
          items:
            type: string
          type: array
        member_user_ids:
          description: |2

            User IDs of the members of the Budget.
          items:
            type: string
          type: array
        period_type:
          $ref: '#/components/schemas/PeriodType'
        start_date:
          description: |2

            The UTC date when the Budget should start counting.
          format: date
          nullable: true
          type: string
        end_date:
          description: |2

            The UTC date when the Budget should stop counting.
          format: date
          nullable: true
          type: string
        limit:
          $ref: '#/components/schemas/Budget_limit'
        budget_status:
          $ref: '#/components/schemas/BudgetStatus'
        limit_type:
          allOf:
          - $ref: '#/components/schemas/LimitType'
          - nullable: true
        spend_type:
          $ref: '#/components/schemas/SpendType'
        current_period_balance:
          $ref: '#/components/schemas/Budget_current_period_balance'
      required:
      - budget_status
      - period_type
      - spend_type
      type: object
      x-konfig-is-used-in-successful-response: true
    BudgetBlueprint:
      description: |2

        Blueprint for provisioning Budgets for a Budget Program.
      example:
        end_date: 2000-01-23
        limit_type: null
        spend_type: null
        parent_budget_id: parent_budget_id
        name: name
        limit: null
        description: description
        id: id
        owner_user_ids:
        - owner_user_ids
        - owner_user_ids
        period_type: null
        start_date: 2000-01-23
      properties:
        description:
          description: |2

            Description of what the Budget is used for.
          nullable: true
          type: string
        id:
          type: string
        name:
          description: |2

            Name for the Budget.
          type: string
        parent_budget_id:
          description: |2

            ID of parent Budget.
          type: string
        owner_user_ids:
          description: |2

            User IDs of the owners of the Budget.
          items:
            type: string
          type: array
        period_type:
          $ref: '#/components/schemas/PeriodType'
        start_date:
          description: |2

            The UTC date when the Budget should start counting.
          format: date
          nullable: true
          type: string
        end_date:
          description: |2

            The UTC date when the Budget should stop counting.
          format: date
          nullable: true
          type: string
        limit:
          $ref: '#/components/schemas/Budget_limit'
        limit_type:
          $ref: '#/components/schemas/LimitType'
        spend_type:
          $ref: '#/components/schemas/SpendType'
      required:
      - id
      - limit_type
      - period_type
      - spend_type
      type: object
    BudgetPeriodBalance:
      description: |2

        Current Budget period balance.
      properties:
        start_date:
          format: date
          nullable: true
          type: string
        end_date:
          format: date
          nullable: true
          type: string
        balance:
          $ref: '#/components/schemas/Budget_limit'
      type: object
    BudgetProgram:
      description: |2

        Budget Program used to create budgets for eligible users.
      example:
        creator_user_id: creator_user_id
        updated_at: 2000-01-23
        name: name
        existing_budget_ids:
        - existing_budget_ids
        - existing_budget_ids
        description: description
        budget_blueprints:
        - end_date: 2000-01-23
          limit_type: null
          spend_type: null
          parent_budget_id: parent_budget_id
          name: name
          limit: null
          description: description
          id: id
          owner_user_ids:
          - owner_user_ids
          - owner_user_ids
          period_type: null
          start_date: 2000-01-23
        - end_date: 2000-01-23
          limit_type: null
          spend_type: null
          parent_budget_id: parent_budget_id
          name: name
          limit: null
          description: description
          id: id
          owner_user_ids:
          - owner_user_ids
          - owner_user_ids
          period_type: null
          start_date: 2000-01-23
        created_at: 2000-01-23
        employee_filter:
          employment_type: ""
          employment_status: ""
        id: id
        budget_program_status: null
      properties:
        description:
          nullable: true
          type: string
        id:
          type: string
        name:
          type: string
        budget_blueprints:
          items:
            $ref: '#/components/schemas/BudgetBlueprint'
          type: array
        existing_budget_ids:
          description: |2

            IDs for existing budgets associated with this Budget Program.
          items:
            type: string
          nullable: true
          type: array
        employee_filter:
          $ref: '#/components/schemas/EmployeeFilter'
        budget_program_status:
          $ref: '#/components/schemas/BudgetProgramStatus'
        creator_user_id:
          nullable: true
          type: string
        created_at:
          format: date
          type: string
        updated_at:
          format: date
          type: string
      required:
      - budget_blueprints
      - budget_program_status
      - created_at
      - id
      - name
      - updated_at
      type: object
      x-konfig-is-used-in-successful-response: true
    BudgetProgramStatus:
      enum:
      - BUDGET_PROGRAM_STATUS_ACTIVE
      - BUDGET_PROGRAM_STATUS_INACTIVE
      - BUDGET_PROGRAM_STATUS_DELETED
      type: string
    BudgetStatus:
      description: |2

        Status of the Budget e.g. APPROVED.
      enum:
      - APPROVED
      - EXPIRED
      - TERMINATED
      - DELETED
      type: string
    BudgetLimitVisibilityType:
      description: |2

        Determines if budget members are allowed to view the budget limit.
      enum:
      - SHARED
      - PRIVATE
      type: string
    CreateBudgetBlueprintRequest:
      description: |2

        Blueprint for provisioning Budgets for a Budget Program.
      example:
        end_date: 2000-01-23
        limit_type: null
        spend_type: null
        parent_budget_id: parent_budget_id
        name: name
        limit:
          amount: 0
          currency: currency
        description: description
        owner_user_ids:
        - owner_user_ids
        - owner_user_ids
        period_type: null
        limit_visibility: null
        start_date: 2000-01-23
      properties:
        description:
          description: |2

            Description of what the Budget is used for.
          type: string
        name:
          description: |2

            Name for the Budget.
          type: string
        parent_budget_id:
          description: |2

            ID of parent Budget.
          type: string
        owner_user_ids:
          description: |2

            User IDs of the owners of the Budget.
          items:
            type: string
          nullable: true
          type: array
        period_type:
          $ref: '#/components/schemas/PeriodType'
        start_date:
          description: |2

            The UTC date when the Budget should start counting.
          format: date
          nullable: true
          type: string
        end_date:
          description: |2

            The UTC date when the Budget should stop counting.
          format: date
          nullable: true
          type: string
        limit:
          $ref: '#/components/schemas/Money'
        limit_type:
          $ref: '#/components/schemas/LimitType'
        spend_type:
          $ref: '#/components/schemas/SpendType'
        limit_visibility:
          $ref: '#/components/schemas/BudgetLimitVisibilityType'
      required:
      - limit
      - limit_type
      - limit_visibility
      - period_type
      - spend_type
      type: object
    CreateBudgetProgramRequest:
      description: |2

        Budget Program used to create budgets for eligible users.
      example:
        existing_budget_ids:
        - existing_budget_ids
        - existing_budget_ids
        name: name
        description: description
        budget_blueprints:
        - end_date: 2000-01-23
          limit_type: null
          spend_type: null
          parent_budget_id: parent_budget_id
          name: name
          limit:
            amount: 0
            currency: currency
          description: description
          owner_user_ids:
          - owner_user_ids
          - owner_user_ids
          period_type: null
          limit_visibility: null
          start_date: 2000-01-23
        - end_date: 2000-01-23
          limit_type: null
          spend_type: null
          parent_budget_id: parent_budget_id
          name: name
          limit:
            amount: 0
            currency: currency
          description: description
          owner_user_ids:
          - owner_user_ids
          - owner_user_ids
          period_type: null
          limit_visibility: null
          start_date: 2000-01-23
        employee_filter: null
      properties:
        description:
          nullable: true
          type: string
        existing_budget_ids:
          description: |2

            IDs for existing budgets associated with this Budget Program.
          items:
            type: string
          nullable: true
          type: array
        budget_blueprints:
          items:
            $ref: '#/components/schemas/CreateBudgetBlueprintRequest'
          type: array
        employee_filter:
          $ref: '#/components/schemas/CreateBudgetProgramRequest_employee_filter'
        name:
          type: string
      required:
      - budget_blueprints
      - name
      type: object
    CreateBudgetRequest:
      example:
        end_date: 2000-01-23
        limit_type: null
        spend_type: null
        parent_budget_id: parent_budget_id
        member_user_ids:
        - member_user_ids
        - member_user_ids
        name: name
        limit:
          amount: 0
          currency: currency
        description: description
        owner_user_ids:
        - owner_user_ids
        - owner_user_ids
        period_type: null
        limit_visibility: null
        start_date: 2000-01-23
      properties:
        description:
          description: |2

            Description of what the Budget is used for.
          type: string
        name:
          description: |2

            Name for the Budget.
          type: string
        parent_budget_id:
          description: |2

            ID of parent Budget.
          type: string
        owner_user_ids:
          description: |2

            User IDs of the owners of the Budget.
          items:
            type: string
          nullable: true
          type: array
        member_user_ids:
          description: |2

            User IDs of the members of the Budget.
          items:
            type: string
          nullable: true
          type: array
        period_type:
          $ref: '#/components/schemas/PeriodType'
        limit:
          $ref: '#/components/schemas/Money'
        limit_type:
          $ref: '#/components/schemas/LimitType'
        spend_type:
          $ref: '#/components/schemas/SpendType'
        start_date:
          description: |2

            The UTC date when the Budget should start counting.
          format: date
          nullable: true
          type: string
        end_date:
          description: |2

            The UTC date when the Budget should stop counting.
          format: date
          nullable: true
          type: string
        limit_visibility:
          $ref: '#/components/schemas/BudgetLimitVisibilityType'
      required:
      - limit
      - limit_type
      - limit_visibility
      - parent_budget_id
      - period_type
      - spend_type
      type: object
    EmployeeFilter:
      description: |2

        A filter used to determine if a user adheres to a Budget Program.
      example:
        employment_type: ""
        employment_status: ""
      properties:
        employment_status:
          allOf:
          - $ref: '#/components/schemas/EmploymentStatus'
          - nullable: true
        employment_type:
          allOf:
          - $ref: '#/components/schemas/EmploymentType'
          - nullable: true
      type: object
    EmploymentStatus:
      description: |2

        A filter used to determine if a user adheres to a Budget Program.
      enum:
      - EMPLOYMENT_STATUS_ACTIVE
      - EMPLOYMENT_STATUS_INACTIVE
      - EMPLOYMENT_STATUS_PENDING
      type: string
    EmploymentType:
      description: |2

        What kind of employment the employee has.
      enum:
      - EMPLOYMENT_TYPE_FULL_TIME
      - EMPLOYMENT_TYPE_PART_TIME
      - EMPLOYMENT_TYPE_CONTRACTOR
      - EMPLOYMENT_TYPE_INTERN
      - EMPLOYMENT_TYPE_FREELANCE
      type: string
    LimitType:
      description: |2

        Whether the Budget limit blocks spend.
      enum:
      - HARD
      - SOFT
      type: string
    Money:
      description: |2

        Money fields can be signed or unsigned. Fields are signed (an unsigned value will be interpreted as positive). The amount of money will be represented in the smallest denomination
        of the currency indicated. For example, USD 7.00 will be represented in cents with an amount of 700.
      example:
        amount: 0
        currency: currency
      properties:
        amount:
          description: "The amount of money, in the smallest denomination of the currency\
            \ indicated by currency. For example, when currency is USD, amount is\
            \ in cents."
          format: int64
          type: integer
        currency:
          description: "The type of currency, in ISO 4217 format. Default to USD if\
            \ not specified"
          nullable: true
          type: string
      type: object
    Page_BudgetProgram_:
      example:
        next_cursor: next_cursor
        items:
        - creator_user_id: creator_user_id
          updated_at: 2000-01-23
          name: name
          existing_budget_ids:
          - existing_budget_ids
          - existing_budget_ids
          description: description
          budget_blueprints:
          - end_date: 2000-01-23
            limit_type: null
            spend_type: null
            parent_budget_id: parent_budget_id
            name: name
            limit: null
            description: description
            id: id
            owner_user_ids:
            - owner_user_ids
            - owner_user_ids
            period_type: null
            start_date: 2000-01-23
          - end_date: 2000-01-23
            limit_type: null
            spend_type: null
            parent_budget_id: parent_budget_id
            name: name
            limit: null
            description: description
            id: id
            owner_user_ids:
            - owner_user_ids
            - owner_user_ids
            period_type: null
            start_date: 2000-01-23
          created_at: 2000-01-23
          employee_filter:
            employment_type: ""
            employment_status: ""
          id: id
          budget_program_status: null
        - creator_user_id: creator_user_id
          updated_at: 2000-01-23
          name: name
          existing_budget_ids:
          - existing_budget_ids
          - existing_budget_ids
          description: description
          budget_blueprints:
          - end_date: 2000-01-23
            limit_type: null
            spend_type: null
            parent_budget_id: parent_budget_id
            name: name
            limit: null
            description: description
            id: id
            owner_user_ids:
            - owner_user_ids
            - owner_user_ids
            period_type: null
            start_date: 2000-01-23
          - end_date: 2000-01-23
            limit_type: null
            spend_type: null
            parent_budget_id: parent_budget_id
            name: name
            limit: null
            description: description
            id: id
            owner_user_ids:
            - owner_user_ids
            - owner_user_ids
            period_type: null
            start_date: 2000-01-23
          created_at: 2000-01-23
          employee_filter:
            employment_type: ""
            employment_status: ""
          id: id
          budget_program_status: null
      properties:
        next_cursor:
          nullable: true
          type: string
        items:
          items:
            $ref: '#/components/schemas/BudgetProgram'
          type: array
      required:
      - items
      type: object
      x-konfig-is-used-in-successful-response: true
    Page_Budget_:
      example:
        next_cursor: next_cursor
        items:
        - creator_user_id: creator_user_id
          end_date: 2000-01-23
          limit_type: ""
          budget_id: budget_id
          member_user_ids:
          - member_user_ids
          - member_user_ids
          description: description
          current_period_balance: null
          budget_status: null
          owner_user_ids:
          - owner_user_ids
          - owner_user_ids
          account_id: account_id
          spend_type: null
          parent_budget_id: parent_budget_id
          name: name
          limit: null
          period_type: null
          start_date: 2000-01-23
        - creator_user_id: creator_user_id
          end_date: 2000-01-23
          limit_type: ""
          budget_id: budget_id
          member_user_ids:
          - member_user_ids
          - member_user_ids
          description: description
          current_period_balance: null
          budget_status: null
          owner_user_ids:
          - owner_user_ids
          - owner_user_ids
          account_id: account_id
          spend_type: null
          parent_budget_id: parent_budget_id
          name: name
          limit: null
          period_type: null
          start_date: 2000-01-23
      properties:
        next_cursor:
          nullable: true
          type: string
        items:
          items:
            $ref: '#/components/schemas/Budget'
          type: array
      required:
      - items
      type: object
      x-konfig-is-used-in-successful-response: true
    PeriodType:
      description: |2

        Period type of the Budget e.g. MONTHLY.
      enum:
      - WEEKLY
      - MONTHLY
      - QUARTERLY
      - YEARLY
      - ONE_TIME
      type: string
    SpendType:
      description: "\nWhether this Budget only can be spent from by cards provisioned\
        \ by this Budget. \n"
      enum:
      - BUDGET_PROVISIONED_CARDS_ONLY
      - NON_BUDGET_PROVISIONED_CARDS_ALLOWED
      type: string
    UpdateBudgetBlueprintRequest:
      description: |2

        Blueprint for provisioning Budgets for a Budget Program.
      example:
        end_date: 2000-01-23
        limit_type: ""
        spend_type: ""
        parent_budget_id: parent_budget_id
        name: name
        limit: null
        description: description
        id: id
        owner_user_ids:
        - owner_user_ids
        - owner_user_ids
        period_type: ""
        start_date: 2000-01-23
      properties:
        description:
          description: |2

            Description of what the Budget is used for.
          nullable: true
          type: string
        id:
          description: |2

            ID of budget blueprint to update, omit if adding new budget blueprint to budget program.
          nullable: true
          type: string
        name:
          description: |2

            Name for the Budget.
          nullable: true
          type: string
        parent_budget_id:
          description: |2

            ID of parent Budget.
          nullable: true
          type: string
        owner_user_ids:
          description: |2

            User IDs of the owners of the Budget.
          items:
            type: string
          nullable: true
          type: array
        period_type:
          allOf:
          - $ref: '#/components/schemas/PeriodType'
          - nullable: true
        start_date:
          description: |2

            The UTC date when the Budget should start counting.
          format: date
          nullable: true
          type: string
        end_date:
          description: |2

            The UTC date when the Budget should stop counting.
          format: date
          nullable: true
          type: string
        limit:
          $ref: '#/components/schemas/Budget_limit'
        limit_type:
          allOf:
          - $ref: '#/components/schemas/LimitType'
          - nullable: true
        spend_type:
          allOf:
          - $ref: '#/components/schemas/SpendType'
          - nullable: true
      type: object
    UpdateBudgetProgramRequest:
      description: |2

        Budget Program used to create budgets for eligible users.
      example:
        existing_budget_ids:
        - existing_budget_ids
        - existing_budget_ids
        name: name
        description: description
        budget_blueprints:
        - end_date: 2000-01-23
          limit_type: ""
          spend_type: ""
          parent_budget_id: parent_budget_id
          name: name
          limit: null
          description: description
          id: id
          owner_user_ids:
          - owner_user_ids
          - owner_user_ids
          period_type: ""
          start_date: 2000-01-23
        - end_date: 2000-01-23
          limit_type: ""
          spend_type: ""
          parent_budget_id: parent_budget_id
          name: name
          limit: null
          description: description
          id: id
          owner_user_ids:
          - owner_user_ids
          - owner_user_ids
          period_type: ""
          start_date: 2000-01-23
        employee_filter: null
      properties:
        description:
          nullable: true
          type: string
        existing_budget_ids:
          description: |2

            IDs for existing budgets associated with this Budget Program.
          items:
            type: string
          nullable: true
          type: array
        budget_blueprints:
          description: |2

            The Blueprints to update the budget program with. Blueprints without an ID are treated as new blueprints to be created.
            Blueprints that exist currently on the Budget Program, but are missing from the input, will be deleted.
          items:
            $ref: '#/components/schemas/UpdateBudgetBlueprintRequest'
          nullable: true
          type: array
        employee_filter:
          $ref: '#/components/schemas/CreateBudgetProgramRequest_employee_filter'
        name:
          nullable: true
          type: string
      type: object
    UpdateBudgetRequest:
      example:
        end_date: 2000-01-23
        limit_type: ""
        spend_type: ""
        member_user_ids:
        - member_user_ids
        - member_user_ids
        name: name
        limit: null
        description: description
        owner_user_ids:
        - owner_user_ids
        - owner_user_ids
        limit_visibility: ""
        start_date: 2000-01-23
      properties:
        description:
          description: |2

            Description of what the Budget is used for.
          nullable: true
          type: string
        name:
          description: |2

            Name for the Budget.
          nullable: true
          type: string
        owner_user_ids:
          description: |2

            User IDs of the owners of the Budget.
          items:
            type: string
          nullable: true
          type: array
        member_user_ids:
          description: |2

            User IDs of the members of the Budget.
          items:
            type: string
          nullable: true
          type: array
        limit:
          $ref: '#/components/schemas/Budget_limit'
        limit_type:
          allOf:
          - $ref: '#/components/schemas/LimitType'
          - nullable: true
        spend_type:
          allOf:
          - $ref: '#/components/schemas/SpendType'
          - nullable: true
        start_date:
          description: |2

            The UTC date when the Budget should start counting.
          format: date
          nullable: true
          type: string
        end_date:
          description: |2

            The UTC date when the Budget should stop counting.
          format: date
          nullable: true
          type: string
        limit_visibility:
          allOf:
          - $ref: '#/components/schemas/BudgetLimitVisibilityType'
          - nullable: true
      type: object
    konfig-generated-schema-single-parameter-schema-get--v1-budget_programs:
      properties:
        cursor:
          nullable: true
          type: string
        limit:
          format: int32
          nullable: true
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - cursor
      - limit
    konfig-generated-schema-single-parameter-schema-post--v1-budget_programs:
      properties:
        Idempotency-Key:
          type: string
        description:
          nullable: true
          type: string
        existing_budget_ids:
          description: |2

            IDs for existing budgets associated with this Budget Program.
          items:
            type: string
          nullable: true
          type: array
        budget_blueprints:
          items:
            $ref: '#/components/schemas/CreateBudgetBlueprintRequest'
          type: array
        employee_filter:
          allOf:
          - $ref: '#/components/schemas/EmployeeFilter'
          - nullable: true
        name:
          type: string
      required:
      - Idempotency-Key
      - budget_blueprints
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Idempotency-Key
    konfig-generated-schema-single-parameter-schema-delete--v1-budget_programs-id:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--v1-budget_programs-id:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--v1-budget_programs-id:
      properties:
        id:
          type: string
        Idempotency-Key:
          type: string
        description:
          nullable: true
          type: string
        existing_budget_ids:
          description: |2

            IDs for existing budgets associated with this Budget Program.
          items:
            type: string
          nullable: true
          type: array
        budget_blueprints:
          description: |2

            The Blueprints to update the budget program with. Blueprints without an ID are treated as new blueprints to be created.
            Blueprints that exist currently on the Budget Program, but are missing from the input, will be deleted.
          items:
            $ref: '#/components/schemas/UpdateBudgetBlueprintRequest'
          nullable: true
          type: array
        employee_filter:
          allOf:
          - $ref: '#/components/schemas/EmployeeFilter'
          - nullable: true
        name:
          nullable: true
          type: string
      required:
      - Idempotency-Key
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - Idempotency-Key
    konfig-generated-schema-single-parameter-schema-get--v1-budgets:
      properties:
        cursor:
          nullable: true
          type: string
        limit:
          format: int32
          nullable: true
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - cursor
      - limit
    konfig-generated-schema-single-parameter-schema-post--v1-budgets:
      properties:
        Idempotency-Key:
          type: string
        description:
          description: |2

            Description of what the Budget is used for.
          type: string
        name:
          description: |2

            Name for the Budget.
          type: string
        parent_budget_id:
          description: |2

            ID of parent Budget.
          type: string
        owner_user_ids:
          description: |2

            User IDs of the owners of the Budget.
          items:
            type: string
          nullable: true
          type: array
        member_user_ids:
          description: |2

            User IDs of the members of the Budget.
          items:
            type: string
          nullable: true
          type: array
        period_type:
          $ref: '#/components/schemas/PeriodType'
        limit:
          $ref: '#/components/schemas/Money'
        limit_type:
          $ref: '#/components/schemas/LimitType'
        spend_type:
          $ref: '#/components/schemas/SpendType'
        start_date:
          description: |2

            The UTC date when the Budget should start counting.
          format: date
          nullable: true
          type: string
        end_date:
          description: |2

            The UTC date when the Budget should stop counting.
          format: date
          nullable: true
          type: string
        limit_visibility:
          $ref: '#/components/schemas/BudgetLimitVisibilityType'
      required:
      - Idempotency-Key
      - limit
      - limit_type
      - limit_visibility
      - parent_budget_id
      - period_type
      - spend_type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Idempotency-Key
    konfig-generated-schema-single-parameter-schema-get--v1-budgets-id:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--v1-budgets-id:
      properties:
        id:
          type: string
        Idempotency-Key:
          type: string
        description:
          description: |2

            Description of what the Budget is used for.
          nullable: true
          type: string
        name:
          description: |2

            Name for the Budget.
          nullable: true
          type: string
        owner_user_ids:
          description: |2

            User IDs of the owners of the Budget.
          items:
            type: string
          nullable: true
          type: array
        member_user_ids:
          description: |2

            User IDs of the members of the Budget.
          items:
            type: string
          nullable: true
          type: array
        limit:
          allOf:
          - $ref: '#/components/schemas/Money'
          - nullable: true
        limit_type:
          allOf:
          - $ref: '#/components/schemas/LimitType'
          - nullable: true
        spend_type:
          allOf:
          - $ref: '#/components/schemas/SpendType'
          - nullable: true
        start_date:
          description: |2

            The UTC date when the Budget should start counting.
          format: date
          nullable: true
          type: string
        end_date:
          description: |2

            The UTC date when the Budget should stop counting.
          format: date
          nullable: true
          type: string
        limit_visibility:
          allOf:
          - $ref: '#/components/schemas/BudgetLimitVisibilityType'
          - nullable: true
      required:
      - Idempotency-Key
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - Idempotency-Key
    konfig-generated-schema-single-parameter-schema-post--v1-budgets-id-archive:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    Budget_limit:
      allOf:
      - $ref: '#/components/schemas/Money'
      - nullable: true
    Budget_current_period_balance:
      allOf:
      - $ref: '#/components/schemas/BudgetPeriodBalance'
      - nullable: true
    CreateBudgetProgramRequest_employee_filter:
      allOf:
      - $ref: '#/components/schemas/EmployeeFilter'
      - nullable: true
  securitySchemes:
    OAuth2:
      description: OAuth2 security scheme
      flows:
        authorizationCode:
          authorizationUrl: https://accounts-api.brex.com/oauth2/default/v1/authorize
          scopes:
            openid: openid
            offline_access: offline access
            budgets: View and manage budgets data
            budgets.readonly: View budgets data
          tokenUrl: https://accounts-api.brex.com/oauth2/default/v1/token
      type: oauth2
      x-konfig-globally-required-security: true
x-explorer-enabled: false

