/*
 * Budgets API
 *  The budgets API lets you manage your Brex budgets. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developer-access@brex.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Budget;
import com.konfigthis.client.model.BudgetLimit;
import com.konfigthis.client.model.BudgetLimitVisibilityType;
import com.konfigthis.client.model.CreateBudgetRequest;
import com.konfigthis.client.model.LimitType;
import java.time.LocalDate;
import com.konfigthis.client.model.Money;
import com.konfigthis.client.model.PageBudget;
import com.konfigthis.client.model.PeriodType;
import com.konfigthis.client.model.SpendType;
import com.konfigthis.client.model.UpdateBudgetRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BudgetsApi
 */
@Disabled
public class BudgetsApiTest {

    private static BudgetsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new BudgetsApi(apiClient);
    }

    /**
     *  Archive a budget 
     *
     *  Archives a budget, making it unusable for future expenses and removing it from the UI 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void archiveBudgetByIdTest() throws ApiException {
        String id = null;
        api.archiveBudgetById(id)
                .execute();
        // TODO: test validations
    }

    /**
     *  Create Budget 
     *
     *  Creates a Budget. This endpoint requires budget management. If your account does not have access to budget management features, a 403 response status will be returned.  If this is the case and you want to gain access to this endpoint, please contact Brex support. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        String parentBudgetId = null;
        PeriodType periodType = null;
        Money limit = null;
        LimitType limitType = null;
        SpendType spendType = null;
        BudgetLimitVisibilityType limitVisibility = null;
        String idempotencyKey = null;
        String description = null;
        String name = null;
        List<String> ownerUserIds = null;
        List<String> memberUserIds = null;
        LocalDate startDate = null;
        LocalDate endDate = null;
        Budget response = api.create(parentBudgetId, periodType, limit, limitType, spendType, limitVisibility, idempotencyKey)
                .description(description)
                .name(name)
                .ownerUserIds(ownerUserIds)
                .memberUserIds(memberUserIds)
                .startDate(startDate)
                .endDate(endDate)
                .execute();
        // TODO: test validations
    }

    /**
     *  Get Budget 
     *
     *  Retrieves a Budget by ID 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String id = null;
        Budget response = api.getById(id)
                .execute();
        // TODO: test validations
    }

    /**
     *  List Budgets 
     *
     *  Lists Budgets belonging to this account 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTest() throws ApiException {
        String cursor = null;
        Integer limit = null;
        PageBudget response = api.list()
                .cursor(cursor)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

    /**
     *  Update Budget 
     *
     *  Updates a Budget. This endpoint requires budget management. If your account does not have access to budget management features, a 403 response status will be returned.  If this is the case and you want to gain access to this endpoint, please contact Brex support. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBudgetTest() throws ApiException {
        String id = null;
        String idempotencyKey = null;
        String description = null;
        String name = null;
        List<String> ownerUserIds = null;
        List<String> memberUserIds = null;
        BudgetLimit limit = null;
        LimitType limitType = null;
        SpendType spendType = null;
        LocalDate startDate = null;
        LocalDate endDate = null;
        BudgetLimitVisibilityType limitVisibility = null;
        Budget response = api.updateBudget(id, idempotencyKey)
                .description(description)
                .name(name)
                .ownerUserIds(ownerUserIds)
                .memberUserIds(memberUserIds)
                .limit(limit)
                .limitType(limitType)
                .spendType(spendType)
                .startDate(startDate)
                .endDate(endDate)
                .limitVisibility(limitVisibility)
                .execute();
        // TODO: test validations
    }

}
